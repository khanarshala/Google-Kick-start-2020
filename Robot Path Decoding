#include <bits/stdc++.h>
#include <chrono>
#include <random>
#define ll long long int
#define ull unsigned long long int
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define rep(i,n) for(ll i=0;i<n;i++)
#define loop(i,a,b) for(ll i=a;i<=b;i++)
#define vi vector <int>
#define vs vector <string>
#define vc vector <char>
#define vl vector <ll>
#define all(c) (c).begin(),(c).end()
#define max3(a,b,c) max(max(a,b),c)
#define min3(a,b,c) min(min(a,b),c)
#define deb(x) cerr<<#x<<' '<<'='<<' '<<x<<'\n'
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
// ordered_set s ; s.order_of_key(val)  no. of elements strictly less than val
// s.find_by_order(i)  itertor to ith element (0 indexed)
typedef vector<vector<ll>> matrix;
ll power(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll modInverse(ll a){return power(a,mod-2);}
const int N=500023;
bool vis[N];
vector <int> adj[N];
ll limit=1e9;
string s;
int close[N]={0};
pair<ll,ll> recurse(ll l,ll r)
{
    ll row=0,col=0;
    for(int i=l;i<=r;i++)
    {
        if(s[i]=='S')
            row++;
        else if(s[i]=='N')
            row--;
        else if(s[i]=='E')
            col++;
        else if(s[i]=='W')
            col--;
        else
        {
            ll start=i+2;
            ll end=close[i+1]-1;
            auto diff=recurse(start,end);
            ll fact=s[i]-'0';
            diff.first*=fact;
            diff.second*=fact;
            diff.first%=limit;
            diff.second%=limit;
            i=end+1;
            row+=diff.first;
            col+=diff.second;
            row%=limit;
            col%=limit;
        }
        row%=limit;
        col%=limit;
    }
    return mp(row,col);
}
void solve()
{
    cin>>s;
    ll n=s.length();
    s='%'+s;
    int indx=0;
    int arr[n+1]={0};
    rep(i,n+1)
        close[i]=0;
    for(int i=1;i<=n;i++)
    {
        if(s[i]=='(')
        {
            indx++;
            arr[indx]=i;
        }
        if(s[i]==')')
        {
            close[arr[indx]]=i;
            indx--;
        }
    }
    auto p=recurse(1,n);
    ll row=0,col=0;
    row+=p.first;
    col+=p.second;
    row%=limit;
    col%=limit;
    row+=limit;
    col+=limit;
    row%=limit;
    col%=limit;
    row++;
    col++;
    cout<<col<<' '<<row<<'\n';
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int T=1;
    cin>>T;
    int t=0;
    while(t++<T)
    {
        cout<<"Case #"<<t<<":"<<' ';
        solve();
        //cout<<'\n';
    }
    cerr << "Time : " << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << "ms\n";
}
